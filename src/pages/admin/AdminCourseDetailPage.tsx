import React, { useMemo } from 'react';
import { useParams, useNavigate, Link } from 'react-router-dom';
import { FiArrowLeft, FiEdit2, FiTrash2, FiBookOpen, FiClock, FiUser, FiFileText, FiVideo, FiDownload } from 'react-icons/fi';

export interface CourseResource {
  id: string;
  type: 'pdf' | 'video' | 'doc' | 'link';
  title: string;
  size?: string;
  url?: string;
}

export interface LessonContent {
  id: string;
  type: 'text' | 'video' | 'file';
  title: string;
  content?: string;
  url?: string;
  size?: string;
  file?: File;
}

export interface CourseLesson {
  id: string;
  title: string;
  duration?: string;
  content?: LessonContent[];
}

export interface CourseSection {
  id: string;
  title: string;
  lessons: CourseLesson[];
}

export interface CourseInstructor {
  name: string;
  title: string;
  initials: string;
}

export interface Course {
  id: string;
  title: string;
  description: string;
  duration?: string;
  level?: 'C∆° b·∫£n' | 'Trung c·∫•p' | 'N√¢ng cao';
  objectives?: string[];
  sections?: CourseSection[];
  resources?: CourseResource[];
  instructor?: CourseInstructor;
  createdAt: string;
}

const AdminCourseDetailPage: React.FC = () => {
  const { courseId } = useParams<{ courseId: string }>();
  const navigate = useNavigate();

  // Mock course data - in real app, this would come from API
  const course: Course = useMemo(() => ({
    id: courseId || '1',
    title: 'K·ªπ nƒÉng chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi',
    description: 'C√°c nguy√™n t·∫Øc chƒÉm s√≥c c∆° b·∫£n v√† n√¢ng cao cho ng∆∞·ªùi cao tu·ªïi, bao g·ªìm dinh d∆∞·ª°ng, v·∫≠n ƒë·ªông v√† giao ti·∫øp. Kh√≥a h·ªçc n√†y cung c·∫•p ki·∫øn th·ª©c to√†n di·ªán v·ªÅ c√°ch chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi m·ªôt c√°ch an to√†n v√† hi·ªáu qu·∫£.',
    duration: '4 gi·ªù',
    level: 'C∆° b·∫£n',
    objectives: [
      'N·∫Øm v·ªØng nguy√™n t·∫Øc an to√†n khi h·ªó tr·ª£ sinh ho·∫°t h·∫±ng ng√†y',
      'Th·ª±c h√†nh giao ti·∫øp tr·∫•n an v√† t√¥n tr·ªçng ng∆∞·ªùi cao tu·ªïi',
      'Nh·∫≠n bi·∫øt s·ªõm d·∫•u hi·ªáu r·ªßi ro v√† c√°ch x·ª≠ l√Ω ban ƒë·∫ßu',
      'Hi·ªÉu bi·∫øt v·ªÅ dinh d∆∞·ª°ng v√† ch·∫ø ƒë·ªô ƒÉn u·ªëng ph√π h·ª£p',
      'K·ªπ nƒÉng h·ªó tr·ª£ v·∫≠n ƒë·ªông v√† ph√≤ng ng·ª´a t√© ng√£'
    ],
    sections: [
      {
        id: 'sec-1',
        title: 'T·ªïng quan & an to√†n',
        lessons: [
          {
            id: 'l-1',
            title: 'Gi·ªõi thi·ªáu vai tr√≤ caregiver',
            duration: '10m',
            content: [
              {
                id: 'c-1',
                type: 'text',
                title: 'ƒê·ªãnh nghƒ©a caregiver',
                content: '<p>Caregiver l√† ng∆∞·ªùi chƒÉm s√≥c, h·ªó tr·ª£ ng∆∞·ªùi cao tu·ªïi trong c√°c ho·∫°t ƒë·ªông sinh ho·∫°t h√†ng ng√†y. Vai tr√≤ n√†y ƒë√≤i h·ªèi s·ª± ki√™n nh·∫´n, t√¨nh y√™u th∆∞∆°ng v√† ki·∫øn th·ª©c chuy√™n m√¥n.</p>'
              },
              {
                id: 'c-2',
                type: 'video',
                title: 'Video gi·ªõi thi·ªáu',
                url: 'https://example.com/video1.mp4',
                size: '5:30'
              }
            ]
          },
          {
            id: 'l-2',
            title: 'Nguy√™n t·∫Øc an to√†n t·∫°i nh√†',
            duration: '18m',
            content: [
              {
                id: 'c-3',
                type: 'text',
                title: 'C√°c nguy√™n t·∫Øc c∆° b·∫£n',
                content: '<p>Lu√¥n ƒë·∫£m b·∫£o m√¥i tr∆∞·ªùng s·ªëng an to√†n, lo·∫°i b·ªè c√°c v·∫≠t c·∫£n, ƒë·∫£m b·∫£o √°nh s√°ng ƒë·∫ßy ƒë·ªß v√† kh√¥ng gian r·ªông r√£i ƒë·ªÉ di chuy·ªÉn.</p>'
              },
              {
                id: 'c-4',
                type: 'file',
                title: 'Checklist an to√†n',
                url: 'https://example.com/checklist.pdf',
                size: '2.1MB'
              }
            ]
          }
        ]
      },
      {
        id: 'sec-2',
        title: 'Giao ti·∫øp & ƒë·ªìng h√†nh',
        lessons: [
          {
            id: 'l-3',
            title: 'K·ªπ thu·∫≠t giao ti·∫øp tr·∫•n an',
            duration: '22m',
            content: [
              {
                id: 'c-5',
                type: 'text',
                title: 'Nguy√™n t·∫Øc giao ti·∫øp',
                content: '<p>L·∫Øng nghe t√≠ch c·ª±c, s·ª≠ d·ª•ng ng√¥n ng·ªØ c∆° th·ªÉ ph√π h·ª£p, tr√°nh √°p ƒë·∫∑t v√† lu√¥n th·ªÉ hi·ªán s·ª± t√¥n tr·ªçng.</p>'
              },
              {
                id: 'c-6',
                type: 'video',
                title: 'Th·ª±c h√†nh giao ti·∫øp',
                url: 'https://example.com/communication.mp4',
                size: '8:45'
              }
            ]
          },
          {
            id: 'l-4',
            title: 'X·ª≠ l√Ω t√¨nh hu·ªëng cƒÉng th·∫≥ng',
            duration: '15m',
            content: [
              {
                id: 'c-7',
                type: 'text',
                title: 'Nh·∫≠n bi·∫øt d·∫•u hi·ªáu cƒÉng th·∫≥ng',
                content: '<p>Quan s√°t thay ƒë·ªïi h√†nh vi, c·∫£m x√∫c, ph·∫£n ·ª©ng c·ªßa ng∆∞·ªùi cao tu·ªïi ƒë·ªÉ k·ªãp th·ªùi can thi·ªáp.</p>'
              }
            ]
          }
        ]
      }
    ],
    resources: [
      { id: 'r-1', type: 'pdf', title: 'Checklist an to√†n trong nh√†', size: '1.2MB' },
      { id: 'r-2', type: 'video', title: 'K·ªπ thu·∫≠t di chuy·ªÉn an to√†n', size: '8:24' },
      { id: 'r-3', type: 'doc', title: 'H∆∞·ªõng d·∫´n dinh d∆∞·ª°ng', size: '3.1MB' }
    ],
    instructor: { 
      name: 'BS. Nguy·ªÖn Minh Anh', 
      title: 'Chuy√™n gia L√£o khoa', 
      initials: 'MA' 
    },
    createdAt: new Date().toISOString()
  }), [courseId]);

  const handleDelete = () => {
    if (window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a kh√≥a h·ªçc n√†y?')) {
      // In real app, call API to delete course
      navigate('/admin/training');
    }
  };

  const getContentIcon = (type: string) => {
    switch (type) {
      case 'text': return <FiFileText className="w-4 h-4" />;
      case 'video': return <FiVideo className="w-4 h-4" />;
      case 'file': return <FiDownload className="w-4 h-4" />;
      default: return <FiFileText className="w-4 h-4" />;
    }
  };

  const getResourceIcon = (type: string) => {
    switch (type) {
      case 'pdf': return <FiFileText className="w-4 h-4 text-red-600" />;
      case 'video': return <FiVideo className="w-4 h-4 text-purple-600" />;
      case 'doc': return <FiFileText className="w-4 h-4 text-blue-600" />;
      case 'link': return <FiBookOpen className="w-4 h-4 text-green-600" />;
      default: return <FiFileText className="w-4 h-4" />;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-6xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="mb-6">
          <div className="flex items-center gap-4 mb-4">
            <button
              onClick={() => navigate('/admin/training')}
              className="inline-flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <FiArrowLeft className="mr-2" />
              Quay l·∫°i
            </button>
          </div>
          
          <div className="flex items-start justify-between">
            <div className="flex-1">
              <h1 className="text-3xl font-bold text-gray-900 mb-2">{course.title}</h1>
              <div className="flex flex-wrap items-center gap-4 text-sm text-gray-600 mb-4">
                {course.duration && (
                  <div className="flex items-center">
                    <FiClock className="mr-2" />
                    <span>{course.duration}</span>
                  </div>
                )}
                {course.level && (
                  <div className="flex items-center">
                    <span className="mr-2">üéØ</span>
                    <span>{course.level}</span>
                  </div>
                )}
                {course.sections && course.sections.length > 0 && (
                  <div className="flex items-center">
                    <span className="mr-2">üìö</span>
                    <span>{course.sections.length} module</span>
                  </div>
                )}
                {course.resources && course.resources.length > 0 && (
                  <div className="flex items-center">
                    <span className="mr-2">üìÅ</span>
                    <span>{course.resources.length} t√†i li·ªáu</span>
                  </div>
                )}
              </div>
            </div>
            
            <div className="flex items-center gap-2">
              <Link
                to={`/admin/training/${course.id}/edit`}
                className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                <FiEdit2 className="mr-2" />
                Ch·ªânh s·ª≠a
              </Link>
              <button
                onClick={handleDelete}
                className="inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
              >
                <FiTrash2 className="mr-2" />
                X√≥a
              </button>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-6">
            {/* Course Description */}
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-4">M√¥ t·∫£ kh√≥a h·ªçc</h2>
              <p className="text-gray-700 leading-7">{course.description}</p>
            </div>

            {/* Learning Objectives */}
            {course.objectives && course.objectives.length > 0 && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h2 className="text-xl font-semibold text-gray-900 mb-4">Nh·ªØng g√¨ s·∫Ω h·ªçc ƒë∆∞·ª£c</h2>
                <ul className="space-y-3">
                  {course.objectives.map((objective, index) => (
                    <li key={index} className="flex items-start gap-3 text-gray-700">
                      <span className="mt-1 text-green-600">‚úÖ</span>
                      <span>{objective}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            {/* Course Content */}
            {course.sections && course.sections.length > 0 && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h2 className="text-xl font-semibold text-gray-900 mb-6">N·ªôi dung kh√≥a h·ªçc</h2>
                <div className="space-y-6">
                  {course.sections.map((section) => (
                    <div key={section.id} className="border border-gray-200 rounded-lg overflow-hidden">
                      <div className="bg-gray-50 px-4 py-3 border-b border-gray-200">
                        <div className="flex items-center justify-between">
                          <h3 className="font-semibold text-gray-900">{section.title}</h3>
                          <span className="text-sm text-gray-600">{section.lessons.length} b√†i</span>
                        </div>
                      </div>
                      
                      <div className="divide-y divide-gray-200">
                        {section.lessons.map((lesson) => (
                          <div key={lesson.id} className="p-4">
                            <div className="flex items-start justify-between mb-3">
                              <div className="flex-1">
                                <h4 className="font-medium text-gray-900 mb-1">{lesson.title}</h4>
                                {lesson.duration && (
                                  <div className="flex items-center text-sm text-gray-600">
                                    <FiClock className="mr-1" />
                                    <span>{lesson.duration}</span>
                                  </div>
                                )}
                              </div>
                            </div>
                            
                            {/* Lesson Content */}
                            {lesson.content && lesson.content.length > 0 && (
                              <div className="ml-4 space-y-2">
                                <div className="text-sm font-medium text-gray-700 mb-2">N·ªôi dung:</div>
                                {lesson.content.map((content) => (
                                  <div key={content.id} className="flex items-center gap-2 text-sm text-gray-600 bg-gray-50 p-2 rounded">
                                    {getContentIcon(content.type)}
                                    <span>{content.title}</span>
                                    {content.size && (
                                      <span className="text-xs text-gray-500">({content.size})</span>
                                    )}
                                  </div>
                                ))}
                              </div>
                            )}
                          </div>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Resources */}
            {course.resources && course.resources.length > 0 && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h2 className="text-xl font-semibold text-gray-900 mb-4">T√†i li·ªáu ƒë√≠nh k√®m</h2>
                <div className="space-y-3">
                  {course.resources.map((resource) => (
                    <div key={resource.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        {getResourceIcon(resource.type)}
                        <div>
                          <div className="font-medium text-gray-900">{resource.title}</div>
                          <div className="text-sm text-gray-600">
                            {resource.type.toUpperCase()} ‚Ä¢ {resource.size}
                          </div>
                        </div>
                      </div>
                      <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">
                        T·∫£i xu·ªëng
                      </button>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1 space-y-6">
            {/* Course Info */}
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Th√¥ng tin kh√≥a h·ªçc</h3>
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <span className="text-gray-600">Th·ªùi l∆∞·ª£ng</span>
                  <span className="font-medium">{course.duration || 'Ch∆∞a x√°c ƒë·ªãnh'}</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-gray-600">Tr√¨nh ƒë·ªô</span>
                  <span className="font-medium">{course.level || 'Ch∆∞a x√°c ƒë·ªãnh'}</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-gray-600">S·ªë module</span>
                  <span className="font-medium">{course.sections?.length || 0}</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-gray-600">T√†i li·ªáu</span>
                  <span className="font-medium">{course.resources?.length || 0}</span>
                </div>
              </div>
            </div>

            {/* Instructor */}
            {course.instructor && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">Gi·∫£ng vi√™n</h3>
                <div className="flex items-center gap-3 mb-3">
                  <div className="w-12 h-12 rounded-full bg-blue-600 text-white flex items-center justify-center font-semibold">
                    {course.instructor.initials}
                  </div>
                  <div>
                    <div className="font-medium text-gray-900">{course.instructor.name}</div>
                    <div className="text-sm text-gray-600">{course.instructor.title}</div>
                  </div>
                </div>
                <p className="text-sm text-gray-700">
                  Chuy√™n gia v·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c l√£o khoa v√† chƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi.
                </p>
              </div>
            )}

            {/* Actions */}
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">H√†nh ƒë·ªông</h3>
              <div className="space-y-3">
                <Link
                  to={`/admin/training/${course.id}/files`}
                  className="w-full inline-flex items-center justify-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
                >
                  <FiBookOpen className="mr-2" />
                  Qu·∫£n l√Ω t√†i li·ªáu
                </Link>
                <Link
                  to={`/admin/training/${course.id}/edit`}
                  className="w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <FiEdit2 className="mr-2" />
                  Ch·ªânh s·ª≠a kh√≥a h·ªçc
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminCourseDetailPage;
