import React, { useState } from 'react';
import { FiUsers, FiPlus, FiEdit, FiTrash2, FiHeart, FiCalendar, FiAlertTriangle, FiX, FiUser, FiPhone, FiMail, FiMapPin, FiClock, FiAward } from 'react-icons/fi';

// Interface cho th√†nh vi√™n gia ƒë√¨nh
interface FamilyMember {
  id: number;
  name: string;
  age: number;
  relationship: string;
  avatar: string;
  medicalConditions: string[];
  medications: string[];
  lastCheckup: string;
  notes: string;
  bloodPressure: string;
  bloodSugar: string;
  weight: string;
  height: string;
  bloodPressureUpdatedBy: string;
  bloodPressureUpdatedAt: string;
  bloodSugarUpdatedBy: string;
  bloodSugarUpdatedAt: string;
}

const FamilyPage: React.FC = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [familyMembers, setFamilyMembers] = useState<FamilyMember[]>([
    {
      id: 1,
      name: 'Nguy·ªÖn VƒÉn B·ªë',
      age: 72,
      relationship: 'B·ªë',
      avatar: 'üë®‚Äçü¶≥',
      medicalConditions: ['Cao huy·∫øt √°p', 'Ti·ªÉu ƒë∆∞·ªùng type 2'],
      medications: ['Metformin', 'Amlodipine', 'Lisinopril'],
      lastCheckup: '2024-01-10',
      notes: 'C·∫ßn theo d√µi huy·∫øt √°p h√†ng ng√†y, u·ªëng thu·ªëc ƒë√∫ng gi·ªù',
      bloodPressure: '140/90 mmHg',
      bloodSugar: '8.5 mmol/L',
      weight: '75 kg',
      height: '165 cm',
      bloodPressureUpdatedBy: 'Tr·∫ßn Th·ªã Mai',
      bloodPressureUpdatedAt: '2024-01-20 08:30',
      bloodSugarUpdatedBy: 'Tr·∫ßn Th·ªã Mai',
      bloodSugarUpdatedAt: '2024-01-20 08:30'
    },
    {
      id: 2,
      name: 'Tr·∫ßn Th·ªã M·∫π',
      age: 68,
      relationship: 'M·∫π',
      avatar: 'üë©‚Äçü¶≥',
      medicalConditions: ['Vi√™m kh·ªõp', 'Lo√£ng x∆∞∆°ng'],
      medications: ['Calcium', 'Vitamin D', 'Ibuprofen'],
      lastCheckup: '2024-01-15',
      notes: 'C·∫ßn t·∫≠p th·ªÉ d·ª•c nh·∫π nh√†ng, tr√°nh v·∫≠n ƒë·ªông m·∫°nh',
      bloodPressure: '125/80 mmHg',
      bloodSugar: '6.2 mmol/L',
      weight: '58 kg',
      height: '155 cm',
      bloodPressureUpdatedBy: 'L√™ VƒÉn H√πng',
      bloodPressureUpdatedAt: '2024-01-19 14:15',
      bloodSugarUpdatedBy: 'L√™ VƒÉn H√πng',
      bloodSugarUpdatedAt: '2024-01-19 14:15'
    }
  ]);

  // H√†m m·ªü modal th√™m th√†nh vi√™n
  const handleAddMember = () => {
    setIsModalOpen(true);
  };

  // H√†m ƒë√≥ng modal
  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  // H√†m x√≥a th√†nh vi√™n
  const handleDeleteMember = (id: number) => {
    setFamilyMembers(prev => prev.filter(member => member.id !== id));
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2 flex items-center">
              <FiUsers className="h-8 w-8 mr-3 text-blue-600" />
              Qu·∫£n l√Ω gia ƒë√¨nh
            </h1>
            <p className="text-lg text-gray-600">
              T·∫°o v√† qu·∫£n l√Ω h·ªì s∆° c·ªßa c√°c th√†nh vi√™n cao tu·ªïi trong gia ƒë√¨nh
            </p>
          </div>
          <button 
            onClick={handleAddMember}
            className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center"
          >
            <FiPlus className="h-5 w-5 mr-2" />
            Th√™m th√†nh vi√™n
          </button>
        </div>
      </div>

      {/* Danh s√°ch th√†nh vi√™n */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {familyMembers.map((member) => (
          <div key={member.id} className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow">
            {/* Header card */}
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-center space-x-3">
                <div className="text-4xl">{member.avatar}</div>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900">{member.name}</h3>
                  <p className="text-sm text-gray-600">{member.age} tu·ªïi - {member.relationship}</p>
                </div>
              </div>
              <div className="flex space-x-2">
                <button className="p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors">
                  <FiEdit className="h-4 w-4" />
                </button>
                <button 
                  onClick={() => handleDeleteMember(member.id)}
                  className="p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                >
                  <FiTrash2 className="h-4 w-4" />
                </button>
              </div>
            </div>

            {/* Th√¥ng tin s·ª©c kh·ªèe c∆° b·∫£n */}
            <div className="grid grid-cols-2 gap-3 mb-4">
              <div className="bg-red-50 p-3 rounded-lg">
                <div className="text-xs text-red-600 font-medium mb-1">Huy·∫øt √°p</div>
                <div className="text-sm font-semibold text-red-800">{member.bloodPressure}</div>
                <div className="text-xs text-red-500 mt-1">
                  B·ªüi: {member.bloodPressureUpdatedBy}
                </div>
                <div className="text-xs text-red-400">
                  {member.bloodPressureUpdatedAt}
                </div>
              </div>
              <div className="bg-blue-50 p-3 rounded-lg">
                <div className="text-xs text-blue-600 font-medium mb-1">ƒê∆∞·ªùng huy·∫øt</div>
                <div className="text-sm font-semibold text-blue-800">{member.bloodSugar}</div>
                <div className="text-xs text-blue-500 mt-1">
                  B·ªüi: {member.bloodSugarUpdatedBy}
                </div>
                <div className="text-xs text-blue-400">
                  {member.bloodSugarUpdatedAt}
                </div>
              </div>
              <div className="bg-green-50 p-3 rounded-lg">
                <div className="text-xs text-green-600 font-medium mb-1">C√¢n n·∫∑ng</div>
                <div className="text-sm font-semibold text-green-800">{member.weight}</div>
              </div>
              <div className="bg-purple-50 p-3 rounded-lg">
                <div className="text-xs text-purple-600 font-medium mb-1">Chi·ªÅu cao</div>
                <div className="text-sm font-semibold text-purple-800">{member.height}</div>
              </div>
            </div>

            {/* T√¨nh tr·∫°ng s·ª©c kh·ªèe */}
            <div className="mb-4">
              <h4 className="text-sm font-semibold text-gray-900 mb-2">T√¨nh tr·∫°ng s·ª©c kh·ªèe</h4>
              <div className="flex flex-wrap gap-1">
                {member.medicalConditions.map((condition, index) => (
                  <span key={index} className="px-2 py-1 bg-red-100 text-red-800 rounded-full text-xs">
                    {condition}
                  </span>
                ))}
              </div>
            </div>

            {/* Thu·ªëc ƒëang d√πng */}
            <div className="mb-4">
              <h4 className="text-sm font-semibold text-gray-900 mb-2">Thu·ªëc ƒëang d√πng</h4>
              <div className="flex flex-wrap gap-1">
                {member.medications.map((med, index) => (
                  <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">
                    {med}
                  </span>
                ))}
              </div>
            </div>

            {/* L·∫ßn kh√°m cu·ªëi */}
            <div className="flex items-center space-x-2 text-sm text-gray-600">
              <FiCalendar className="h-4 w-4" />
              <span>Kh√°m cu·ªëi: {member.lastCheckup}</span>
            </div>
          </div>
        ))}
      </div>

      {/* Modal th√™m th√†nh vi√™n */}
      {isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
            {/* Header Modal */}
            <div className="flex items-center justify-between p-6 border-b border-gray-200">
              <h2 className="text-2xl font-bold text-gray-900">Th√™m th√†nh vi√™n m·ªõi</h2>
              <button
                onClick={handleCloseModal}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
              >
                <FiX className="h-6 w-6 text-gray-500" />
              </button>
            </div>

            {/* Content Modal */}
            <div className="p-6">
              <form className="space-y-6">
                {/* Th√¥ng tin c∆° b·∫£n */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      H·ªç v√† t√™n *
                    </label>
                    <input
                      type="text"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="Nh·∫≠p h·ªç v√† t√™n"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Tu·ªïi *
                    </label>
                    <input
                      type="number"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="Nh·∫≠p tu·ªïi"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    M·ªëi quan h·ªá *
                  </label>
                  <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="">Ch·ªçn m·ªëi quan h·ªá</option>
                    <option value="B·ªë">B·ªë</option>
                    <option value="M·∫π">M·∫π</option>
                    <option value="√îng n·ªôi">√îng n·ªôi</option>
                    <option value="B√† n·ªôi">B√† n·ªôi</option>
                    <option value="√îng ngo·∫°i">√îng ngo·∫°i</option>
                    <option value="B√† ngo·∫°i">B√† ngo·∫°i</option>
                    <option value="C√¥">C√¥</option>
                    <option value="Ch√∫">Ch√∫</option>
                    <option value="D√¨">D√¨</option>
                    <option value="C·∫≠u">C·∫≠u</option>
                    <option value="Kh√°c">Kh√°c</option>
                  </select>
                </div>

                {/* Th√¥ng tin c∆° b·∫£n */}
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      C√¢n n·∫∑ng
                    </label>
                    <input
                      type="text"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="V√≠ d·ª•: 75 kg"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Chi·ªÅu cao
                    </label>
                    <input
                      type="text"
                      className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="V√≠ d·ª•: 165 cm"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    T√¨nh tr·∫°ng s·ª©c kh·ªèe
                  </label>
                  <input
                    type="text"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="V√≠ d·ª•: Cao huy·∫øt √°p, Ti·ªÉu ƒë∆∞·ªùng, Vi√™m kh·ªõp..."
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Thu·ªëc ƒëang d√πng
                  </label>
                  <input
                    type="text"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="V√≠ d·ª•: Metformin, Amlodipine, Calcium..."
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    L·∫ßn kh√°m cu·ªëi
                  </label>
                  <input
                    type="date"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Ghi ch√∫ s·ª©c kh·ªèe
                  </label>
                  <textarea
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    rows={3}
                    placeholder="Ghi ch√∫ v·ªÅ t√¨nh tr·∫°ng s·ª©c kh·ªèe, l∆∞u √Ω ƒë·∫∑c bi·ªát, h∆∞·ªõng d·∫´n chƒÉm s√≥c..."
                  />
                </div>
              </form>
            </div>

            {/* Footer Modal */}
            <div className="flex items-center justify-end space-x-4 p-6 border-t border-gray-200 bg-gray-50">
              <button
                onClick={handleCloseModal}
                className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
              >
                H·ªßy
              </button>
              <button className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                Th√™m th√†nh vi√™n
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default FamilyPage;
